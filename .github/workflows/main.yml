name: Build and Release

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: |
        pio run -e knobby -e twatch
        pio run -e knobby -e twatch -t buildfs
        mkdir upload
        cp .pio/build/knobby/firmware.bin upload/knobby.bin
        cp .pio/build/twatch/firmware.bin upload/twatch.bin
        zip -j upload/knobby-firmware.zip flash.bat flash.sh .pio/build/knobby/*.bin
        zip -j upload/twatch-firmware.zip flash.bat flash.sh .pio/build/twatch/*.bin
    - name: Archive firmware artifacts
      uses: actions/upload-artifact@v2
      with:
        name: knobby-firmware-artifacts
        path: upload/*
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2
    - name: Upload branch firmware to S3
      if: github.ref_type == 'branch'
      run:
        aws s3 cp
          --acl public-read
          --metadata "{\"git-version\":\"$(git describe --match="" --dirty --always)\"}"
          --recursive
          upload
          s3://knobby/firmware/${{ github.ref_name }}/
    - name: Upload release firmware to S3
      if: github.ref_type == 'tag'
      run:
        aws s3 cp
          --acl public-read
          --metadata "{\"git-version\":\"$(git describe --match="" --dirty --always)\"}"
          --recursive
          upload
          s3://knobby/firmware/
    - name: Draft release
      uses: softprops/action-gh-release@v1
      if: github.ref_type == 'tag'
      with:
        draft: true
        files: |
          upload/knobby.bin
          upload/knobby-firmware.zip
          upload/twatch.bin
          upload/twatch-firmware.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
